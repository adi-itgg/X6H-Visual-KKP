/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package io.aitech.pv.form.content.dashboard;

import io.aitech.pv.MainFrame;
import io.aitech.pv.repository.DashboardRepository;
import io.vertx.sqlclient.Row;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.Locale;

/**
 *
 * @author adisp
 */
public class DashboardForm extends javax.swing.JPanel {

    private final Logger log = LoggerFactory.getLogger(DashboardForm.class);

    private final NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(Locale.forLanguageTag("id-ID"));

    private final DashboardRepository dashboardRepository;

    /**
     * Creates new form DashboardForm
     */
    public DashboardForm(MainFrame mainFrame) {
        this.dashboardRepository = mainFrame.dashboardRepository();
        initComponents();
        card4.setData(new ModelCard("/icon/stock.png", "Siswa", "-", "Jumlah siswa aktif"));
        card1.setData(new ModelCard("/icon/stock.png", "Guru", "-", "Jumlah guru aktif"));
        card2.setData(new ModelCard("/icon/profit.png", "Uang", "-", "Jumlah uang yang telah dihasilkan"));

        fetchAllData();
    }

    private void showErrorDialog(Throwable exception) {
        log.error("error", exception);
        showErrorDialog(exception.getMessage());
    }
    private void showErrorDialog(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }

    private void fetchAllData() {
        dashboardRepository.countAllStudent().onSuccess(c -> {
            card4.setData(new ModelCard("/icon/stock.png", "Siswa", c + "", "Jumlah siswa aktif"));
        }).onFailure(this::showErrorDialog);

        dashboardRepository.countAllTeacher().onSuccess(c -> {
            card1.setData(new ModelCard("/icon/stock.png", "Guru", c + "", "Jumlah guru aktif"));
        }).onFailure(this::showErrorDialog);

        dashboardRepository.countAllMoney().onSuccess(c -> {
            String rp = currencyFormatter.format(c).split(",")[0].replace("Rp", "Rp ");
            card2.setData(new ModelCard("/icon/profit.png", "Uang", rp, "Jumlah uang yang telah dihasilkan"));
        }).onFailure(this::showErrorDialog);

        dashboardRepository.fetchAll().onSuccess(v -> {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // clear table
            for (Row row : v) {
                Object[] data = new Object[row.size()];
                for (int i = 0; i < row.size(); i++) {
                    Object value = row.getValue(i);

                    if (i == 5) { // total amount
                        data[i] = currencyFormatter.format(value).split(",")[0].replace("Rp", "Rp ");
                        continue;
                    }

                    data[i] = value;
                }
                model.addRow(data);
            }
        }).onFailure(this::showErrorDialog);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        card1 = new io.aitech.pv.form.content.dashboard.Card();
        card2 = new io.aitech.pv.form.content.dashboard.Card();
        card4 = new io.aitech.pv.form.content.dashboard.Card();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        card1.setColor1(new java.awt.Color(186, 123, 200));
        card1.setColor2(new java.awt.Color(167, 94, 210));

        card2.setColor1(new java.awt.Color(241, 208, 62));
        card2.setColor2(new java.awt.Color(211, 184, 61));

        card4.setColor1(new java.awt.Color(142, 142, 250));
        card4.setColor2(new java.awt.Color(123, 123, 200));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Nama Siswa", "Jenis Kelamin", "Orang Tua/Wali", "Tahun Masuk", "Kelas", "Total Pembayaran", "Terakhir Transaksi"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        // center align
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        centerRenderer.setVerticalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(card4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(card1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private io.aitech.pv.form.content.dashboard.Card card1;
    private io.aitech.pv.form.content.dashboard.Card card2;
    private io.aitech.pv.form.content.dashboard.Card card4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
